name: 'Download snapd snap'
description: 'Download snapd snap from either the current workflow or from a master push workflow'
inputs:
  use-master-push:
    description: 'Use snapd snap from master push workflow'
    required: true
    type: boolean
  is-amd:
    description: 'Get AMD snapd snap build'
    required: true
    type: boolean
  is-arm:
    description: 'Get ARM snapd snap build'
    required: true
    type: boolean
  is-fips:
    description: 'Get fips snapd snap build'
    required: true
    type: boolean
  download-folder:
    description: 'Where to save downloaded snap'
    requried: false
    type: string
    default: "${{ github.workspace }}/built-snap"
  
runs:
  using: "composite"
  steps:
  - name: Download built snap (amd64)
    uses: actions/download-artifact@v5
    if: "${{ !inputs.use-master-push && inputs.is-amd && !inputs.is-fips }}"
    with:
      name: snap-files-amd64-default-test
      # eg. snapd_1337.2.65.1+g97.d35b459_amd64.snap
      pattern: snapd_1337.*.snap
      path: "${{ inputs.download-folder }}"

  - name: Download built snap (arm64)
    if: "${{ !inputs.use-master-push && inputs.is-arm && !inputs.is-fips }}"
    uses: actions/download-artifact@v5
    with:
      name: snap-files-arm64-default-test
      pattern: snapd_1337.*.snap
      # eg. snapd_1337.2.65.1+g97.d35b459_amd64.snap
      path: "${{ inputs.download-folder }}"

  - name: Download built FIPS snap (amd64)
    uses: actions/download-artifact@v5
    # eg. ubuntu-fips-deb, ubuntu-fips-snap
    if: "${{ !inputs.use-master-push && inputs.is-fips && inputs.is-amd }}"
    with:
      name: snap-files-amd64-FIPS-test
      # eg. snapd_1337.2.65.1+g97.d35b459-fips_amd64.snap
      pattern: snapd_1337.*-fips_*.snap
      path: "${{ inputs.download-folder }}"

  - name: Download built snap (amd64) from master
    if: "${{ inputs.use-master-push }}"
    shell: bash
    run: |
      filename=
      if [[ "${{ inputs.is-fips }}" = "true" ]]; then
        filename="snap-files-amd64-FIPS-test"
      elif [[ "${{ inputs.is-amd }}" ]]; then
        filename="snap-files-amd64-default-test"
      elfi [[ "${{ inputs.is-arm }}" ]]; then
        filename="snap-files-arm64-default-test"
      fi
      run="$(gh run list -w ci-master-push.yaml --json number,status --jq '.[] | select(.status = "completed") | .number' | head -1)"
      gh run download "$run" -n "$filename"
      mkdir -p built-snap
      mv snapd*.snap built-snap

  - name: Rename imported snap
    shell: bash
    run: |
      for snap in built-snap/snapd_1337.*.snap; do
        mv -v "${snap}" "${snap}.keep"
      done
