name: Nightly Firefox peformance tests

# on:
#   schedule:
#   - cron: "0 0 * * *"
#   workflow_dispatch:

on:
  pull_request:
    branches: [ "master", "release/**", "core-snap-security-release/**", "security-release/**", "hotfix/**" ]
  push:
    branches: [ "release/**", "core-snap-security-release/**", "security-release/**" ]

jobs:

  test-firefox-snap:
    name: Test Firefox snap
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        wget https://storage.googleapis.com/snapd-spread-tests/snapd-tests/snaps/snapd_master_amd64.snap
        sudo snap install snapd_master_amd64.snap --dangerous
        sudo snap install firefox
        sudo apt install xvfb

    - name: Run Firefox performance tests
      uses: ./.github/actions/run-firefox-performance-tests
      with:
        firefox-exec: firefox
        results-file: /tmp/snap-results.json

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: snap-results
        path: /tmp/snap-results.json

  test-firefox-binary:
    name: Test Firefox binary
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo snap install firefox
        sudo apt install xvfb

    - name: Run Firefox performance tests
      uses: ./.github/actions/run-firefox-performance-tests
      with:
        firefox-exec: /snap/firefox/current/usr/lib/firefox/firefox
        results-file: /tmp/bin-results.json

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: bin-results
        path: /tmp/bin-results.json

  compare-results:
    needs:
      - test-firefox-snap
      - test-firefox-binary
    name: Compare snap vs. binary results
    runs-on: ubuntu-latest
    steps:
    - name: Download snap results
      uses: actions/download-artifact@v4
      with:
        name: snap-results
        path: snap-results
    
    - name: Download bin results
      uses: actions/download-artifact@v4
      with:
        name: bin-results
        path: bin-results

    - name: Compare
      run: |
          cat <<EOF > comparison
          import json
          import sys
          from statistics import geometric_mean


          def calculate_overall_score(tests_json):
              scores = []
              for k, v in tests_json.items():
                  scores.append(v['metrics']['Score']['current'][0])
              return geometric_mean(scores)


          def main(file1, file2):
              with open(file1, 'r') as f:
                  data1 = json.load(f)
              with open(file2, 'r') as f:
                  data2 = json.load(f)

              # focus on the tests subtree since your JSON root is {"JetStream2.0": ...}
              tests1 = data1["JetStream2.0"]["tests"]
              tests2 = data2["JetStream2.0"]["tests"]

              print(f'Overall score for snap {calculate_overall_score(tests1)}')
              print(f'Overall score for bin {calculate_overall_score(tests2)}')

              # for test, obj in tests1.items():
              #     overall1 = obj['metrics']['Score']['current'][0]
              #     overall2 = tests2[test]['metrics']['Score']['current'][0]
              #     print(f'Test {test} diff: {overall1 - overall2}')

          if __name__ == "__main__":
              # if len(sys.argv) != 3:
              #     print("Usage: python subtract_json_metrics.py file1.json file2.json")
              #     sys.exit(1)
              main("/tmp/results/snap/results.json", "/tmp/results/bin/results.json")
              # main(sys.argv[1], sys.argv[2])
          EOF
          python3 comparison
