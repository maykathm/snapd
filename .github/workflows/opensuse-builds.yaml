name: Build deb package

on:
  workflow_call:
    inputs:
      runs-on:
        description: 'A json list of tags to indicate which runner to use'
        required: true
        type: string
      build-repo:
        description: 'The repository name in osc to build'
        required: true
        type: string
      system:
        description: 'The system name as known by spread'
        required: true
        type: string

jobs:
  build-rpm:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        curl https://build.opensuse.org/projects/openSUSE:Tools/signing_keys/download?kind=gpg -o openSUSE_Tools.gpg
        sudo gpg --dearmor -o /etc/apt/keyrings/openSUSE_Tools.gpg openSUSE_Tools.gpg
        echo 'deb [signed-by=/etc/apt/keyrings/openSUSE_Tools.gpg] https://download.opensuse.org/repositories/openSUSE:/Tools/xUbuntu_22.10/ ./' | sudo tee /etc/apt/sources.list.d/openBuildService.list
        sudo apt update
        sudo apt install -y osc

    - name: Setup osc
      run: |
        mkdir ${{ github.workspace }}/.osc-cache
        cat <<EOF > oscrc
        [general]
        apiurl=https://api.opensuse.org
        packagecachedir = ${{ github.workspace }}/.osc-cache
        [https://api.opensuse.org]
        user=${{ secrets.OSC_USER }}
        pass=${{ secrets.OSC_PASSWORD }}
        credentials_mgr_class=osc.credentials.PlaintextConfigFileCredentialsManager
        EOF
        osc co --config oscrc system:snappy snapd

    - name: Build rpm
      run: |
        cd system:snappy/snapd
        osc build --config oscrc --no-checks --no-service --trust-all-projects --keep-pkgs /tmp/builds ${{ inputs.build-repo }} x86_64

    # - name: Build deb
    #   run: |
    #     chmod -R a+w .
    #     mkdir -p /tmp/builds
    #     chmod -R a+w /tmp/builds
    #     docker run --cap-add SYS_ADMIN --rm \
    #       --mount type=bind,src=$(pwd),dst=/tmp/snapd \
    #       --mount type=bind,src=/tmp/builds,dst=/tmp/builds \
    #       deb-base:latest \
    #       bash -c "
    #         cp -r /tmp/snapd /home/test/snapd
    #         chown -R test:test /home/test/snapd && \
    #         /home/test/snapd/tests/lib/packaging/build-deb.sh /home/test/snapd test && \
    #         cp /home/test/*.deb /tmp/builds
    #       "
    #     cd /tmp/builds
    #     find . -name '*.deb' -exec tar cvf package-${{ inputs.system }}.tar {} +

    # - name: upload packages
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: package-${{ inputs.system }}
    #     path: /tmp/builds/package-${{ inputs.system }}.tar
